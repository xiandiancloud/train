<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
           http://www.springframework.org/schema/mvc  
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- 自动扫描包下的@Controller标注的类控制器类 -->
	<context:component-scan base-package="com.dhl.web" />
	<context:component-scan base-package="com.dhl.lms" />
	<context:component-scan base-package="com.dhl.cms" />
	<context:component-scan base-package="com.dhl.admin" />
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<mvc:annotation-driven/>

	<mvc:interceptors>  
	    <mvc:interceptor>  
            <mvc:mapping path="/lms/*"/>  
            <bean class="com.dhl.lms.LmsLoginInterceptor"></bean>  
        </mvc:interceptor>  
        <mvc:interceptor>  
            <mvc:mapping path="/cms/*"/>  
            <bean class="com.dhl.cms.CmsLoginInterceptor"></bean>  
        </mvc:interceptor>  
        <mvc:interceptor>  
            <mvc:mapping path="/admin/*"/>  
            <bean class="com.dhl.admin.AdminLoginInterceptor"></bean>  
        </mvc:interceptor>
    </mvc:interceptors>  
    
	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView" 
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="utf-8" />
		
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="i18n/messages" />
    
    	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="marshallingConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>

	<bean id="marshallingConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
    	<constructor-arg ref="jaxbMarshaller" />
    	<property name="supportedMediaTypes" value="application/xml"/>
	</bean>
	
    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<ref bean="marshallingConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.dhl.domain.RestShell</value>
				<value>com.dhl.domain.RestTrain</value>
			</list>
		</property>
	</bean>
	
	<bean id="employees" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="jaxbMarshaller" />
	</bean>
	
</beans>  
